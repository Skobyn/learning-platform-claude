steps:
  # Install dependencies
  - name: 'node:18'
    entrypoint: npm
    args: ['ci', '--production']
    id: 'install'

  # Build the application
  - name: 'node:18'
    entrypoint: npm
    args: ['run', 'build']
    env:
      - 'NODE_ENV=production'
    id: 'build'
    waitFor: ['install']

  # Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE}:${SHORT_SHA}'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE}:latest'
      - '--build-arg'
      - 'NODE_ENV=production'
      - '.'
    id: 'docker-build'
    waitFor: ['build']

  # Push Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '--all-tags'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE}'
    id: 'docker-push'
    waitFor: ['docker-build']

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE}:${SHORT_SHA}'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--add-cloudsql-instances'
      - '${_CLOUD_SQL_CONNECTION}'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--min-instances'
      - '1'
      - '--max-instances'
      - '10'
      - '--timeout'
      - '300'
      - '--set-env-vars'
      - 'NODE_ENV=production,GCS_BUCKET=${_GCS_BUCKET}'
      - '--set-secrets'
      - 'DATABASE_URL=database-url:latest,REDIS_URL=redis-url:latest,NEXTAUTH_SECRET=nextauth-secret:latest,OPENAI_API_KEY=openai-api-key:latest'
    id: 'deploy'
    waitFor: ['docker-push']

  # Run database migrations
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'jobs'
      - 'execute'
      - 'migrate-db'
      - '--region'
      - '${_REGION}'
      - '--wait'
    id: 'migrate'
    waitFor: ['deploy']

# Substitutions for environment-specific values
substitutions:
  _REGION: us-central1
  _REPOSITORY: learning-platform
  _IMAGE: app
  _SERVICE_NAME: learning-platform
  _CLOUD_SQL_CONNECTION: ${PROJECT_ID}:us-central1:learning-platform-db
  _GCS_BUCKET: ${PROJECT_ID}-media

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  
# Store build artifacts
artifacts:
  objects:
    location: 'gs://${PROJECT_ID}_cloudbuild/artifacts'
    paths:
      - '.next/**/*'

# Timeout for the entire build
timeout: '30m'