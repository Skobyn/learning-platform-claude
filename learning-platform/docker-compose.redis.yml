version: '3.8'

services:
  # Redis Cluster - Master Nodes
  redis-master-1:
    image: redis:7-alpine
    container_name: redis-master-1
    ports:
      - "7001:7001"
      - "17001:17001"
    volumes:
      - redis-master-1-data:/data
      - ./config/redis/redis-master-1.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - redis-cluster
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  redis-master-2:
    image: redis:7-alpine
    container_name: redis-master-2
    ports:
      - "7002:7002"
      - "17002:17002"
    volumes:
      - redis-master-2-data:/data
      - ./config/redis/redis-master-2.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - redis-cluster
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  redis-master-3:
    image: redis:7-alpine
    container_name: redis-master-3
    ports:
      - "7003:7003"
      - "17003:17003"
    volumes:
      - redis-master-3-data:/data
      - ./config/redis/redis-master-3.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - redis-cluster
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Redis Cluster - Replica Nodes
  redis-replica-1:
    image: redis:7-alpine
    container_name: redis-replica-1
    ports:
      - "7004:7004"
      - "17004:17004"
    volumes:
      - redis-replica-1-data:/data
      - ./config/redis/redis-replica-1.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - redis-cluster
    depends_on:
      - redis-master-1
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  redis-replica-2:
    image: redis:7-alpine
    container_name: redis-replica-2
    ports:
      - "7005:7005"
      - "17005:17005"
    volumes:
      - redis-replica-2-data:/data
      - ./config/redis/redis-replica-2.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - redis-cluster
    depends_on:
      - redis-master-2
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  redis-replica-3:
    image: redis:7-alpine
    container_name: redis-replica-3
    ports:
      - "7006:7006"
      - "17006:17006"
    volumes:
      - redis-replica-3-data:/data
      - ./config/redis/redis-replica-3.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - redis-cluster
    depends_on:
      - redis-master-3
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Redis Cluster Setup
  redis-cluster-setup:
    image: redis:7-alpine
    container_name: redis-cluster-setup
    depends_on:
      - redis-master-1
      - redis-master-2
      - redis-master-3
      - redis-replica-1
      - redis-replica-2
      - redis-replica-3
    networks:
      - redis-cluster
    command: >
      sh -c "
        sleep 10 &&
        redis-cli --cluster create
        redis-master-1:7001
        redis-master-2:7002
        redis-master-3:7003
        redis-replica-1:7004
        redis-replica-2:7005
        redis-replica-3:7006
        --cluster-replicas 1
        --cluster-yes
      "

  # Redis Cluster Monitor
  redis-monitor:
    image: redis:7-alpine
    container_name: redis-monitor
    depends_on:
      - redis-cluster-setup
    networks:
      - redis-cluster
    volumes:
      - ./scripts/redis-monitor.sh:/usr/local/bin/redis-monitor.sh
    command: >
      sh -c "
        chmod +x /usr/local/bin/redis-monitor.sh &&
        /usr/local/bin/redis-monitor.sh
      "
    restart: unless-stopped

  # Redis Commander - Web UI for monitoring
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    hostname: redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=cluster:redis-master-1:7001:0,cluster:redis-master-2:7002:0,cluster:redis-master-3:7003:0
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin123
    networks:
      - redis-cluster
    depends_on:
      - redis-cluster-setup

  # Redis Exporter for Prometheus monitoring
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis-master-1:7001,redis://redis-master-2:7002,redis://redis-master-3:7003
      - REDIS_EXPORTER_LOG_FORMAT=txt
    networks:
      - redis-cluster
    depends_on:
      - redis-cluster-setup

networks:
  redis-cluster:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis-master-1-data:
    driver: local
  redis-master-2-data:
    driver: local
  redis-master-3-data:
    driver: local
  redis-replica-1-data:
    driver: local
  redis-replica-2-data:
    driver: local
  redis-replica-3-data:
    driver: local

# Health checks and logging
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

x-healthcheck: &redis-healthcheck
  test: ["CMD", "redis-cli", "ping"]
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 30s